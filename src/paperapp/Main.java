/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package paperapp;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author wangyong
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileFileChooser = new javax.swing.JFileChooser();
        openButton = new javax.swing.JButton();
        pathFileLabel = new javax.swing.JLabel();

        fileFileChooser.setAcceptAllFileFilterUsed(false);
        fileFileChooser.setFileFilter(new FileNameExtensionFilter("文件数据","pl"));
        fileFileChooser.setDragEnabled(true);
        fileFileChooser.setMultiSelectionEnabled(true);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        openButton.setText("打开");
        openButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(openButton)
                    .addComponent(pathFileLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(openButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pathFileLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openButtonActionPerformed
        // TODO add your handling code here:
        if (fileFileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File[] f = fileFileChooser.getSelectedFiles();
            System.out.println(f.length);
            for (int i = 0; i < f.length; i++) {
                readSingleFielAndSave(f[i]);
            }
        }
    }//GEN-LAST:event_openButtonActionPerformed
    public void readSingleFielAndSave(File f) {
        FileReader reader = null;
        FileWriter writer = null;
        BufferedReader bufferedReader = null;
        BufferedWriter bufferedWriter = null;
        try {
            reader = new FileReader(f);
            writer = new FileWriter(f.getName().split("[.]")[0]);
            bufferedReader = new BufferedReader(reader);
            bufferedWriter = new BufferedWriter(writer);
            String line = bufferedReader.readLine();
            double step = 1;
            double totalDepth = 20;
            int intervalPoints = (int) (totalDepth / step);
            while (line != null) {
                if (line.startsWith("VRTX")) {
                    String[] strs = line.split("\\s+");
                    double x = Double.parseDouble(strs[2]);
                    double y = Double.parseDouble(strs[3]);
                    double z = Double.parseDouble(strs[4]);

                    for (int i = 0; i < intervalPoints; i++) {
                        if (i <= 2) {
                            String property = strs[2] + " " + strs[3] + " " + (z - i * step) + " " + 2 + "\r\n";
                            bufferedWriter.write(property);
                        } else if (i > 2 && i <= 8) {
                            String property = strs[2] + " " + strs[3] + " " + (z - i * step) + " " + 10 + "\r\n";
                            bufferedWriter.write(property);
                        } else if (i > 8 && i < 20) {
                            String property = strs[2] + " " + strs[3] + " " + (z - i * step) + " " + 20 + "\r\n";
                            bufferedWriter.write(property);
                        }
                    }
                }
                line = bufferedReader.readLine();
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                bufferedReader.close();
                reader.close();
                bufferedWriter.close();
                writer.close();
            } catch (Exception e) {
                System.out.println(e);
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser fileFileChooser;
    private javax.swing.JButton openButton;
    private javax.swing.JLabel pathFileLabel;
    // End of variables declaration//GEN-END:variables
}
